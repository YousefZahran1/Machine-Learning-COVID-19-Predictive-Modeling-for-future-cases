# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WvWaH7opy1XaKiZkWlcVjxij_3j64V_7
"""

# Upload the file
from google.colab import files
uploaded = files.upload()

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report


# Load the data
filename = list(uploaded.keys())[0]  # Get the uploaded file name
data = pd.read_csv(filename)

# Display the first few rows of the dataframe to verify
data.head()

# Preprocess the data
# Assume we want to predict whether the confirmed cases in a country exceed 10000 on the last recorded date

# Select relevant features (using last recorded date's data as features)
data['Total_Confirmed'] = data.iloc[:, 4:].sum(axis=1)  # Sum of all cases for each country
data['Target'] = (data['Total_Confirmed'] > 10000).astype(int)  # Target variable

# Select features and target
X = data.iloc[:, 4:-1].values  # All days data except the target column
y = data['Target'].values  # Target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Logistic Regression model
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy}')
print('Confusion Matrix:')
print(conf_matrix)
print('Classification Report:')
print(class_report)